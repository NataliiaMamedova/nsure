# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    dynamodb_session_info_table: '%env(AWS_DYNAMODB_TABLE_NAME)%'
    redis.dsn: '%env(REDIS_DSN)%'
    transaction.expiration.time: 604800 # 7 days

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $sessionInfoTableName: '%dynamodb_session_info_table%'
            $transactionExpirationTime: '%transaction.expiration.time%'
    _instanceof:
        Happyr\MessageSerializer\Transformer\TransformerInterface:
            tags:
                - 'happyr.message_serializer.transformer'

        Happyr\MessageSerializer\Hydrator\HydratorInterface:
            tags:
                - 'happyr.message_serializer.hydrator'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    Aws\DynamoDb\Marshaler: ~

    default.serializer:
        class: Symfony\Component\Serializer\Serializer
        factory: [ '@App\Serializer\SerializerFactory', 'create' ]

    App\ArgumentResolver\RequestArgumentResolver:
        arguments:
            $denormalizer: '@default.serializer'

    metrics.collector.in_memory:
        class: Paybis\Metrics\MetricCollector\InMemoryMetricCollector
        autowire: true
        shared: true

    internal_event_queue_consumer:
        class: App\Service\SqsConsumer
        public: true
        autowire: true
        arguments:
            $transportName: 'internal_event_queue'
            $serializer: '@Happyr\MessageSerializer\Serializer'

    user_events_queue_consumer:
        class: App\Service\SqsConsumer
        public: true
        autowire: true
        arguments:
            $transportName: 'user_events_queue'
            $serializer: '@Happyr\MessageSerializer\Serializer'

    transaction_event_queue_consumer:
        class: App\Service\SqsConsumer
        public: true
        autowire: true
        arguments:
            $transportName: 'transaction_event_queue'
            $serializer: '@Happyr\MessageSerializer\Serializer'

    App\NSure\NSureClient:
        arguments:
            $client: '@httplug.client.nsure_client'

    Paybis\Processing\Api\Client:
        arguments:
            $httpClient: '@httplug.client.processing'
