Resources:
  ECSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Open ElastiCache for access
      VpcId: ${ssm:/pb/vpc/id}
  ECSecurityGroupRuleFromLambda:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow lambda using ElastiCache
      GroupId: !Ref ECSecurityGroup
      IpProtocol: tcp
      FromPort: 6379
      ToPort: 6379
      SourceSecurityGroupId: !Ref LambdaEC2SecurityGroup
  ECSubnetGroup:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      Description: ${self:custom.prefix}
      SubnetIds: ${ssm:/pb/vpc/privateSubnetIds}
  ElastiCacheCluster:
    Type: AWS::ElastiCache::CacheCluster
    Properties:
      ClusterName: ${self:service}-${self:provider.stage}
      AutoMinorVersionUpgrade: true
      CacheNodeType: cache.t3.micro
      CacheSubnetGroupName: !Ref ECSubnetGroup
      Engine: redis
      NumCacheNodes: 1
      PreferredAvailabilityZone: ${self:provider.region}a
      VpcSecurityGroupIds: [!GetAtt [ECSecurityGroup, GroupId]]
